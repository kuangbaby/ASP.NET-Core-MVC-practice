// <auto-generated />
using System;
using Hellocnm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hellocnm.Migrations
{
    [DbContext(typeof(HellocnmContext))]
    partial class HellocnmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hellocnm.Models.借阅历史", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reader_code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("read_code");

                    b.HasKey("ID");

                    b.ToTable("Borrowing history");
                });

            modelBuilder.Entity("Hellocnm.Models.读者信息", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DictEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("DictIdentificationr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identification");

                    b.Property<string>("DictName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("DictPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("DictSex")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sex");

                    b.Property<string>("Dictnumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("number");

                    b.Property<int?>("分类ID")
                        .HasColumnType("int");

                    b.Property<int?>("历史ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("分类ID");

                    b.HasIndex("历史ID");

                    b.ToTable("koob");
                });

            modelBuilder.Entity("Hellocnm.Models.读者分类", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Book")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("book");

                    b.Property<string>("DictName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("LimitDay")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("limit_day");

                    b.Property<string>("LimitNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("limit_number");

                    b.HasKey("ID");

                    b.ToTable("ReaderType");
                });

            modelBuilder.Entity("Hellocnm.Models.读者信息", b =>
                {
                    b.HasOne("Hellocnm.Models.读者分类", "分类")
                        .WithMany()
                        .HasForeignKey("分类ID");

                    b.HasOne("Hellocnm.Models.借阅历史", "历史")
                        .WithMany()
                        .HasForeignKey("历史ID");

                    b.Navigation("分类");

                    b.Navigation("历史");
                });
#pragma warning restore 612, 618
        }
    }
}
